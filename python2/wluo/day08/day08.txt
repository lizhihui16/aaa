进程线程的区别和联系
　　* 两者都是多任务编程方式，都能够使用计算机的多核
  　* 进程创建和删除要比线程消耗更多计算机资源。
  　* 进程空间独立数据安全性好，有专门的通信方法。而线程使用全局变量进行通信
  　* 线程使用全局变量通信，更加简单，但是往往需要同步互斥操作
  　* 一个进程可以包含多个线程分支，两者之间存在包含关系
  　* 多个线程共享进程资源，在共享资源操作时往往需要同步互斥操作
  　* 进程线程都有自己的特有属性资源，如命令、id等

使用场景:
  如果需要创建较多的并发，任务比较简单，线程消耗资源较少比较适合
  如果数据操作和功能比较独立，此时使用进程比较合适
  使用线程时需要考虑到同步互斥复杂程度
  python线程要考虑到GIL问题

要求：
　*进程线程的区别
　*进程间通信都知道那些，有什么特点
　*什么是同步互斥，你在什么情况下使用
　*给一个情形，分析用进程还是线程为什么
　*问一些概念和处理方法，僵尸进程　进程状态　　线程效率

网络通信模型

服务器
　  硬件服务器:  主机   集群
      厂商  : IBM  HP  联想  浪潮
  
    软件服务器：编写的服务端程序，依托于硬件服务器运行，提供给用户一定的软件服务
  
      分类 ： webserver  --> 网站后端程序提供网站请求的后端处理和响应
              httpserver --》 处理HTTP请求，回复http响应
  	    邮箱服务器 --》 处理邮件
  	    文件服务器 --》 处理文件传输
    前端　　用户端　　客户端　　前台应用
    　　特征：与用户直接交互，提供给用户使用
    　　要求：良好的用户体验
    后端　　　服务端　　　　后台应用
    　　特征：提供逻辑处理，数据处理
    　　要求：更高的并发量，更快的处理速度，更强的安全性

服务器模型
    模型结构 ： c/s  (客户端服务器模型)
                b/s  （浏览器服务器模型）
    
基础的服务器模型
    循环服务器：循环接受客户端请求，处理请求，每处理完一个请求再去接受下一个请求。   
         优点 ： 实现简单，占用资源少
         缺点 ： 无法同时处理多个客户端请求
         使用情况 ： 处理的任务可以很快完成，不需要建立并发，udp套接字更合适
    
    并发服务器：同时处理多个客户端的任务请求
    
        IO并发： IO多路复用   协程
    
    	优点 ： 资源消耗少，效率较高，适用于IO类型服务器
    	缺点 ： 只能监控IO事件，当多个任务都是cpu计算时无法同事处理
    		
    多进程/多线程并发 ： 为每个客户端单独提供进程或者线程处理请求。由于进程线程执行独立所以对其他进程不会有影响
          
           优点 ： 客户端可以长期占有服务器，操作不会对其他进程线程产生影响
           缺点 ： 消耗资源较多


多进程并发

  使用fork完成并发
      1. 创建套接字，绑定 ，监听
      2. 等待接受客户端请求  accept
      3. 当有新的客户端连接时，创建新的进程处理客户端请求
      4．创建子进程处理客户端请求，父进程继续等待其他客户端连接
      5. 客户端退出则销毁对应的进程

ftp文件服务器

　功能：１、服务端和客户端两部分，要求启动服务器可以有多个客户端同时操作
    　２、客户端可以查看服务器文件库中有什么文件（只有普通文件，不算隐藏文件）
    　３、客户端可以选择文件库的文件进行下载，下载到本地
    　４、客户端还可以上传本地文件到服务器文件夹（不设权限）
    　５、使用print打印一定的格式，作为命令的输入提示界面

　技术分析：　fork 并发　tcp传输　
　　　　　　　如何查看一个文件夹中的文件列表　　os.path.listdir()
            如何判断是一个普通文件　　os.path.isfile()
  结构设计：使用类将功能封装

  工作步骤：先搭建网络链接
        　设计类
        　将功能函数写在类中，逐一实现并测试

 具体功能实现
    １、搭建网络链接
        服务端：创建fork并发服务端
        创建套接字，进行网络连接，连接成功后打印命令选项界面等待输入命令

    ２、设计类

    ３、查看文件列表
        客户端：发送请求
        　　　　接收服务端确认
            　　循环接收服务器发来的文件名并打印
        服务端：　接收请求
                判断可否执行反馈结果
                发送文件名称
    ４、下载文件：
        　客户端：发送请求　　Ｇ
        　　　　　接收服务端确认
        　　    　接收文件
        服务端：接收请求
            　　判断文件是否存在，反馈结果

作业：整理ftp文件服务器程序
    复习http协议
    基于Process的多进程并发服务端