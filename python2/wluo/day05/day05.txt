回顾
１、poll方法实现ＩＯ多路复用
　　p=poll()
　　p.register()
　　p.unregister()
　　p.poll()


*************************************

fork 注意：
    * 进入阻塞态的进程会让出cpu时间片
    * 各个进程在自己空间内对数据的操作不影响其他进程
    * 父进程在执行fork之前开辟的空间子进程也会复制

进程相关函数
    os.getpid()
    功能 ： 获取当前进程的PID号
    返回值 ： 返回当前进程的PID号
    示例：get_pid.py

    os.getppid()
    功能 ： 获取父进程的PID号
    返回值 ： 返回父进程的PID号

    os._exit(status)
    功能 ： 退出进程
    参数 ： 进程的退出状态标志  整数

    sys.exit([status])
    功能： 退出进程
    参数： 默认为0  如果是整数则表示退出状态
                    如果是字符串则表示退出时打印内容

    * sys.exit 可以通过捕获SystemExit异常阻止退出

孤儿进程 ： 父进程先于子进程退出，此时子进程就会成为孤儿进程。
    * 孤儿进程会被系统指定的进程收养，即系统进程会成为该孤儿进程新的父进程
      孤儿进程退出时该父进程会处理退出状态

僵尸进程 ： 子进程先于父进程退出，父进程没有处理子进程退出状态，此时子进程
        成为僵尸进程
    * 僵尸进程已经结束，但是会滞留部分PCB信息在内存，大量的僵尸会消耗
    系统资源，应该尽量避免
示例：ferk_z.py

如何避免僵尸进程产生
    * 父进程处理子进程退出状态
        pid,status = os.wait()
        功能 ：在父进程中阻塞等待处理子进程的退出
        返回值 ： pid  退出的子进程的PID号
                status  子进程的退出状态 
    示例：wait.py

    pid,status = os.waitpid(pid,option)
        功能 ： 在父进程中阻塞等待处理子进程的退出
        参数 ： pid   -1  表示任意子进程退出
                    >0  整数  指定PID号的子进程退出
            option   0  表示阻塞等待
                    WNOHANG  表示非阻塞
        返回值 ：  pid  退出的子进程的PID号
                status  子进程的退出状态 
示例：wait.py
    waitpid(-1,0)   ======  wait()

* 父进程先退出
  创建二级子进程 
    1. 父进程创建子进程等待子进程退出
    2. 子进程创建二级子进程，然后马上退出
    3. 二级子进程成为孤儿，和原来父进程各执行任务
示例：　child.py

群聊聊天室
    功能 ： 类似qq群聊
    1. 进入聊天室需要输入用户名，姓名不能重复
    2. 有人进入聊天室 其他人会收到提示
        xxx 进入聊天室
    3. 某人发消息，则其他人都能收到
        xxx 说： xxxxxxxxx
    4. 有人退出聊天室 其他人会收到提示
        xxx 退出了聊天室
    5. 管理员功能，管理员喊话聊天室所有人都能收到

确定技术模型
消息发送：转发　先发给服务器在转发其他人
套接字选择：udp套接字
用户存储：字典｛姓名：ＩＰ｝
收发关系处理：多进程　分别处理发送接收

整体设计
　　１、封装　将每个功能封装为函数
　　２、测试　实现一个功能测试一个功能
　　３、编写流程搭建网络连接　逐个功能实现

具体功能实现
　网络连接
    服务端：创建udp套接字，绑定地址
    客户端：创建套接字
　登录
    服务端：接收姓名
        　　判断姓名是否存在
        　　根据判断结果返回相应信息
        　　如果不允许登录则功能结束
        　　如果允许登录将用户加入维护的数据结构
        　　将用户登录提示信息发给其他人
    客户端：输入姓名
        　　将姓名发送给服务端
        　　接收服务端确认消息
        　　如果不允许则重新输入
        　　如果允许进入聊天室
        　　创建新的进程，一个用于收消息，一个用于发消息
　发送消息
    服务端
        收到消息判定请求类型
        调用函数处理：将消息转发给其他人
    客户端
        循环写消息
        将消息发送给服务器

　退出
    服务端
        接收消息确定消息类型
        将用户从字典移除
        给其他人发送通知
        给退出的客户端发送标志
    客户端
        输入quit表示退出
        发送退出消息给服务端
        客户端进程退出
        接收特殊标志退出进程

　管理员喊话
        子进程发送给父进程
        父进程转发给其他人

作业：
    １、梳理聊天室代码思路
    ２、整理fork创建进程的通知
    ３、创建父子进程同时复制一个文件，各复制文件的一半到新的文件中