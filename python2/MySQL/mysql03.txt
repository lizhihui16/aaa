	7、distinct
		1、作用 ：不显示字段的重复值
		2、示例
			1、sanguo表中有哪些国家
				select distinct country from sanguo;
			2、计算魏国一共有多少个英雄
				select count(distinct name) from sanguo 
				where country="魏国";
		3、注意
			1、处理distinct和from之间的所有字段,所有字段值必须全部相同才可以去重

1、嵌套查询(子查询)
	1、定义
		把内层的查询结果作为外层的查询条件
	2、select ... from 表名 where 字段名 运算符(select ....);
	3、示例
		1、把攻击值小于 平均攻击值 的名字和攻击值显示出来
			分两步
			select name,gongji from MOSHOU.sanguo 
			where gongji<(select avg(gongji) from MOSHOU.sanguo);
		2、找出每个国家攻击力最高的英雄名字和攻击值
			逻辑错误：
				select name,gongji from sanguo 
				where gongji in
				(select max(gongji) from sanguo group by country);
			正确：
				select name,gongji from sanguo
				where (country,gongji) in 
				(select country,max(gongji) from sanguo group by country);
2、多表查询
	1、两种方式
		1、select 字段名列表 from 表1,表2; 笛卡尔积(不加where)
	2、select 字段名列表 from 表1,表2 where 条件;
		1、显示 省、市详细信息 
        select sheng.s_name,city.c_name from sheng,city 
        where city.cfather_id=sheng.s_id;
        2、查询省、市、县详细信息
        select sheng.s_name,city.c_name,xian.x_name from
        sheng,city,xian where city.cfather_id=sheng.s_id
        and city.c_id=xian.xfather_id;
3、连接查询
	1、内连接
		1、语法格式
			select ... from 表1 inner join 表2 on 条件;
		2、示例
			1、显示 省、市详细信息
            select sheng.s_name,city.c_name from sheng 
            inner join city on sheng.s_id=city.cfather_id;

            2、显示 省、市、县详细信息
            select sheng.s_name,city.c_name,xian.x_name from 
            sheng inner join city on sheng.s_id=city.cfather_id
            inner join xian on xian.xfather_id=city.c_id; 

	2、外连接
		1、左连接
			1、以左表为主显示查询结果
			2、语法格式
				select ... from 表1 left join 表2 on 条件;
			3、示例
				1、显示 省、市 详细信息,要求省全部显示
                select sheng.s_name,city.c_name from sheng 
                left join city on sheng.s_id=city.cfather_id;

                2、显示 省、市、县 详细信息,要求 省 全部显示
                select sheng.s_name,city.c_name,xian.x_name from 
                sheng left join city on sheng.s_id=city.cfather_id
                left join xian on xian.xfather_id=city.c_id;

                3、显示 省、市、县 详细信息,要求 市 全部显示(left、right)
                select sheng.s_name,city.c_name,xian.x_name from 
                sheng right join city on sheng.s_id=city.cfather_id
                left join xian on xian.xfather_id=city.c_id; 

        2、右连接
			1、以右表为主显示查询结果
			2、语法格式
				select ... from 表1 right join 表2 on 条件;

4、约束
	1、作用
		保证数据完整性、一致性、有效性的规则
	2、约束分类
		1、默认约束(default)
			1、插入记录时,如果不给该字段赋值,则使用默认值
			2、字段名 数据类型 default 默认值,
            ###sex enum('M','F','S') not null dafault 'S';

		2、非空约束(not null)
			1、不允许该字段值有NULL记录
			2、字段名 数据类型 not null default 值,
            ###name varchar(10) not null

        示例
        create table t1(
            id int,
            name varchar(20) not null,
            sex enum('M','F','S') default 'S'
        )
        insert into t1(id,name) values(1,'貂蝉');
 
5、索引
    １、定义
        对数据库表的一列或者多列的值进行排序的一种结构(Btree方式)
	２、索引优缺点
		1、优点
			加快数据的检索速度
		2、缺点
			1、当对表中数据进行增加、修改、删除时,索引需要动态维护,占用系统资源，降低了数据的维护速度
			2、索引需要占用物理存储空间
	３、索引示例
		1、开启运行时间检测 ：set profiling=1;
			备注 ：show variables like "profiling";
		2、执行查询语句（没有索引）
			select name from t1 where name="lucy99999";
		3、查看执行时间
			show profiles;
		4、给name字段创建索引
			create index name on t1(name);
		5、执行查询语句
			select name from t1 where name="lucy88888";
		6、查看执行时间
			show profiles;
６、索引的分类
    1、普通索引(index)
        1、使用规则
            1、可设置多个字段
            2、约束 ：无
            3、KEY标志 ：MUL
        2、创建
            1、创建表时
                create table 表名（
                ... ...
                index(字段名),
                index(字段名),
                );
            2、已有表
                create index 索引名 on 表名(字段名);
        3、查看
            1、desc 表名;
            2、show index from 表名\G;
        4、删除
            drop index 索引名 on 表名;		
    ２、唯一索引(unique)
            1、使用规则
                1、可设置多个字段
                2、约束 ：字段值不允许重复,允许为NULL
                3、KEY标志 ：UNI
            2、创建
                1、创建表
                    unique(字段名),
                    unique(字段名)
                2、已有表
                    create unique index 索引名 on 表名(字段名);
            3、查看、删除同普通索引
                Non_unique: 0 --> 唯一索引
                Non_unique: 1 --> 普通索引

                create table t2(
                id int not null,
                name varchar(10),
                age tinyint,
                phnumber char(11),
                chardnum char(18),
                index(name),
                index(age),
                unique(phnumber),
                unique(chardnum)
                );

７、主键(primary key)&&自增长属性(auto_increment)
    1、使用规则
        1、只能有一个主键字段
        2、约束 ：不允许重复,不能为NULL
        3、KEY标志 ：PRI
        4、通常设置记录编号字段 id 为主键,唯一锁定一条记录
    2、创建
        1、创建表时
        create table t3(
            id int primary key auto_increment,
            ... ...
        );
            
        2、已有表
            alter table 表名 add primary key(字段名);

    3、删除
        1、删除自增长属性
            alter table 表名 modify id int;
        2、删除主键
            alter table 表名 drop primary key;
    
            主键：primary key  
                添加、删除 ：add/drop primary key..

            自增长：auto_increment
                添加、删除 ：modify id int;
    4、指定自增长属性起始值
        1、创建表
            create table 表名(
            id int primary key auto_increment,
            ... ...
            )auto_increment=10000;
        2、已有表
            alter table 表名 auto_increment=10000;
8、外键(foreign key)
    1、定义
    　　让当前表字段的值在另一个表的范围内选择
    ２、语法
    　　foreign key(参考字段名)
    　　references 主表（被参考字段名）
       on delete 级联动作
       on update 级联动作
    ３、使用规则
    　　１、主表、从表字段数据类型要一致
    　　２、主表被参考字段：主键
    ４、示例
        １、缴费详细表（财务）
            id 　姓名　　　班级　缴费金额
            １　唐伯虎　　AID08 　300
            ２　点秋香　　AID08   300

            create table jftab(
            id int primary key,
            name varchar(20) not null,
            class char(5) default 'AID',
            money smallint,
            )charset=utf8
            insert into jftab values
            (1,'唐伯虎','AID08',300),
            (2,'点秋香','AID08',300);

        ２、学生信息表（班主任）
            stu_id　姓名　缴费金额
            create table bjtab(
            stu_id int,
            name varchar(15),
            money smallint, 
            foreign key(stu_id) references jftab(id)
            on delete cascade
            on update cascade
            );
    ５、删除
    　１、查看外键名
    　　　show create table bjtab;
    　２、删除外键
        alter table 表名 drop foreign key 外键名;
    6、已有表添加外键
        alter table 表名 add foreign key(stu_id)

        alter table bjtab add foreign key(stu_id)
        references jftab(id)
        on delete set null
        on update  set null;
    ７、级联动作
    　１、cascade
         数据级联删除、更新（参考字段）
    　２、set null
        从表有相关联记录，字段值设置为null
      3、restrict(默认)
        从表有相关联记录，不让主表删除、更新





























