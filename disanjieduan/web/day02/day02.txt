https://www.w3.org/auto/ 资料

1.图片与超链接
	1.图片标签
	  <img src="">
	  默认按照图片原始尺寸显示
	  标签属性：
		1.width:取px为单位的像素值，设置图片宽度
		2.height:取像素值，设置图片的高度
		3.title:用来设置鼠标悬停于图片上方时的显示文本
		4.alt:当图片加载失败时显示的文本
	   注意：宽高尺寸可以只给一个值，另外一个方向会自适应

	2.超链接标签
		1.什么是超链接
			能够实现文件跳转的文本，叫超链接文本
		2.使用超链接
			1.语法：
				<a href="链接地址">超链接文本</a>
			注意：
				1.href属性是必填项，省略的话，超链接文本跟普通文本无差别
				2.如果是网络路径，必须加协议
				3.链接地址可以是网络路径，也可以是本地路径
			2.标签属性
				target:设置目标文件的打开方式，默认在当前窗口打开
				 取值：
					1. _self:默认值
					2. _blank:新建窗口打开
			3.href属性的特殊取值
				 1.href=“”：表示链接至本页面，包含刷新操作
				 2.href="javascript:void(0)":链接至本页，无刷新
				 3.href="#":链接至本页的锚点位置，无刷新
		3.使用锚点链接
			1.通过定义锚点，实现跳转至指定文件的指定位置
			2.使用：
				1.定义超链接，链接到本页的指定位置
				2.再页面相应位置添加锚点
				  et:
				  <a href="">7.早年经历</a>
				  <a name="7"></a>
				  使用name属性定义锚点名称，超链接的链接地址中
				  使用#表示本页，跟上锚点名称，表示跳转至锚点位置
				  练习：
					模拟回到顶部

2.表格标签
	1.语法：
		1.<table></table>表示表格标签
		2.<tr></tr>表示表格中的一行 table row
		3.<td><td>表示行中的一个单元格 table data
		  et:
			<table>
			  <tr>
			  //单元格
			  </tr>
			  <tr></tr>
			  <tr></tr>
			</table>
	2.表格的标签属性
		1. table 属性
			1. border ：设置边框，取值以px为单位的数值（px可以省略）
			2. width ：设置宽度
			3. height ：设置高度
			4. align ：设置表格在其父元素中的水平对齐方式
			5. cellpadding : 设置单元格的内边距（内容与边框之间的距离），取值为px单位的数值
			6. cellspacing : 设置单元格的外边距（单元格与单元格之间的距离，或者单元格与表格边框之间的距离），取值像素为单位的数值
			7. bgcolor : 设置表格的背景颜色，取值可以是英文的颜色名称
		2. tr 标签属性
			1. bgcolor : 设置当前行的背景颜色
			2. align ：设置当前行中内容的水平对齐方式
				取值 ： left(默认值居左) / center（中） / right(居右)
			3. valign :设置当前行内容的垂直对齐方式
				取值 ：top（上） / middle(中) / bottom（下）,默认垂直居中
		3. td 标签属性
			1. width 设置单元格的宽度
			2. height 设置单元格的高度
			3. align 单元格内容的水平对齐方式
			4. valign 单元格内容的垂直对齐方式
			5. bgcolor 单元格的背景颜

	3.单元格合并
		单元格合并涉及表格结构的调整
		是单元格独有的属性 colspan rowspan
		1. 单元格的跨列合并
			从当前单元格的位置开始，横向向右合并几个单元格
			colspan = "3" ->跨3列进行合并(包含自身)
		2. 单元格的跨行合并
			从当前的单元格开始，纵向向下合并单元格
			rowspan = "3" ->向下跨3行合并单元格
		注意 ：
			1.一旦发生单元格合并，要删除多余的单元格
				跨列合并：要删除当前行中多余的单元格
				跨行合并：要删除其后行中多余的单元格
			2.跨行和跨列是单元格的操作，所以属性是单元格td的属性
		
	4.表格行分组
		表格再浏览器中渲染时，会自动添加结构标签
		表格可以分为 thead tfoot tbody
		1.<thead>
			<thead></thead> 标签用来划分表头
			表头中可以有若干行组成
			<thead>
				<tr>
					<td></td>
				</tr>
			</thead>
		2. <tfoot>
		<tfoot></tfoot> 标签用来划分表尾
		表尾中可以有若干行组成
			<tfoot>
				<tr>
					<td></td>
				</tr>
			</tfoot>
		3. 表主体信息
			<tbody>
				<tr>
					<td></td>
				</tr>
			</tbody>
			注意 ：<thead> <tfoot> <tbody>可以省略，默认情况下，所有的行都会被自动添加到 tbody 中
				如果需要手动添加行分组，建议按照 thead  tfoot tbody的顺序书写

3.表单
	1. 用来接收用户输入的数据并且提交给服务器
		表单二要素
			1. form 表单元素
				收集用户信息并发送给服务器
			2. 表单控件 （重点）
				提供了能够跟用户交互的可视化组件
				例如：输入框，按钮，文件上传等
	2. form 表单元素
		1. 注意 ： form元素本身是不可见的，却不能省略，因为数据的提交功能要由 form 元素完成
		2. 语法 ：
			<form>
				表单控件
			</form>
		3. form 标签属性
			1. action 
				必填，指定数据提交的目的地址
			2. method 
				用来设置数据提交方式 get /post 
				默认为get方式提交
				1. get （默认值）
					通常用于向服务器端提交数据
					特点 ：
						1. 提交的数据会以参数的形式拼接在URL后面
						2. 安全性较低
						3. 提交数据最大为2KB
				2. post
					将数据提交给服务器处理
					特点 ：
						1. 数据会打包在请求头中，隐式提交，看不到提交数据
						2. 安全性较高
						3. 没有数据大小限制
				3.enctype
					指定数据的编码方式，表单提供的部门类型有：
						1.application/x-www-form-urlencoded
						 将表单中的数据转换成字符串格式（name=zhangsan&pwd=123456)附加在url后面，使用？与url隔开
						2.multipart/form-data
						 专门用来上传特殊类型数据的，例如图片，文件，MP3
						 数据的提交方式必须时post
						3.text/plain
						数据以纯文本形式编码，不含任何空间和格式字符

	3. 表单控件（重点）
		1. 作用
			提供与用户交互的可视化组件
			注意 ： 只有放在表单元素中的表单控件才允许被提交
		2. 分类
			1. 文本框和密码框
				语法 ：
					文本框 <input type="text">
					密码框 <input type="password">
				属性 ：
					1. name 属性 定义当前控件的名称，缺少的话无法提交
					 name = "uname"
					 uname=zhangsan
					2. value 属性，要提交给服务器的值，可以通过JS获取，同时也是默认显示在控件上的值
					3. maxlength 用来限制用户输入的最大字符数
					4. placeholder 用户输入之前显示在框中的提示文本
					5. type 指定控件类型
					6. autocomplete 设置是否自动补全
			2. 单选框和复选框
				单选按钮 <input type="radio">
				复选框   <input type="checkbox">
				属性 ：
					1. name
						定义控件名称，还起到分组的作用，一组中的按钮名称必须保持一致,实现单选
					2. value 属性 
						设置当前控件的值，最终提交给服务器，按钮的value属性必须指定
					3. checked 属性
						设置预选中状态 可以省略属性值，也可以使用"checked" 作为值
			3.特殊用法 label for id
				将按钮文本与控件绑定在一起，实现点击文本与点击控件等价的效果
				使用：
					1.使用<label></label>标签包括按钮文本
					2.为按钮控件添加id属性，属性值自定义
					3.为label标签添加for属性，属性值与控件的id属性值保持一致，实现文本与控件绑定

			4. 隐藏域和文件选择框
				1. 隐藏域
					作用 ：需要提交给服务器但是却不需要呈现给用户的数据，都可以放在隐藏域中表示
					语法 ：<input type="hidden" name="uid" value="0001">
					属性 ：
						1. name 控件名称
						2. value 控件的值
				2. 文件选择框
					作用 ： 选择文件上传，发送给服务器
					语法 ：
						<input type="file" name="">
					属性 ：
						name 定义控件名称
					*涉及二进制数据提交，文件，图片，MP3，需要设置form en
			5. 下拉选择框
				<select name="province">
					<option value="hebei">河北省</option>
					<option value="heilongjiang">黑龙江省</option>
					<option value="hunan">湖南省</option>
				</select>
				假设用户选择河北省，在使用get方式提交数据时，URL后拼接的数据应为
				province=hebei
			6. 文本域
				支持用户输入多行文本
				语法 ：
					<textarea name="uinfo"></textarea>
				属性 ：
					1. name 控件名称
					2. cols 指定文本域默认显示的列数(宽度)，一行中能显示的英文字符量，中文减半
					3. rows 指定文本域能够显示的行数
				注意 ：文本域可以由用户调整大小
			7. 按钮
				1. 提交按钮
					<input type="submit" value="">
					value 属性设置按钮的显示文本
					点击时，将表单数据发送给服务器
				2. 重置按钮
					<input type="reset" value="">
					重置表单，将表单内容恢复到初始化状态
				3. 普通按钮
					<input type="button" value="点击">
					可以绑定自定义事件
					按钮中的value属性值实际上是定义按钮的显示文本
				4. <button>按钮显示文本</button>
					注意 ：
						1. 按钮标签可以在任何地方使用，不局限在form 表单中使用
						2. 按钮标签使用在form中，默认具有提交功能，等同于input submit
						3. 可以添加属性type 取值 submit / reset / button 进行区分 （非必填）
						4. 在表单外作为普通按钮使用时，需要通过JS 动态绑定事件
			





				





















































