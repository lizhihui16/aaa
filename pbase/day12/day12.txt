day12笔记:
  装饰器 decorators(专业提高往篇)

问题:
  函数名是变量，它绑定一个函数
  函数名 /  函数名()  区别

什么是装饰器
  装饰器是一个函数，主要作用是用来包装另一个函数或类(后面会讲)
  作用：
    是在不改变原函数名(或类名)的情况下改变被包装对象的行为
函数装饰器:
  函数装饰器是指装饰器是一个函数，传入的是一个函数，返回的也是一个函数



语法:
    def 装饰器函数名(参数):
        语句块
        return 函数对象

    @装饰器函数名<换行>
    def 函数名(形参列表):
        语句块
示例：
# 此示例用装饰器改变原来函数的调用流程（业务流程）
# 银行业务
def privileged_check(fn):
    def fx(n,x):
        print('权限验证')
        fn(n,x)
    return fx
@privileged_check
def save_money(name,x):
    print(name,'存钱',x,'元')

@privileged_check   
def withdraw(name,x):
    print(name,'取钱',x,'元')
    
# ～～～～～～一下是小张写的程序
save_money('小王',200)
save_money('小赵',400)
withdraw('小李',500)


函数的文档字符串
    函数内第一次末赋值给任何变量的字符串是函数的文档字符串
  语法：
    def 函数名（参数列表）：
        ‘函数的文档字符串'
        函数语句块
  示例：
    def cba():
        """这是一块文档字符串
        以下省略300字..."""
        pass
    >>>help(cba)

函数的__doc__属性
    __doc__属性用于记录函数的文档字符串
  如：
    print(cba.__doc__)

函数定义语句（def语句）的完整语法
  [@装饰器名1]
  [@装饰器名2]
  [...]
  def 函数名([位置形参],[*元组形参],[命名关键字形参],[**字典形参]):
    "文档字符串"
    语句块

面试题：
    L=[1,2]
    def f(n,lst=[]):
    ''''lst绑定的列表[]会在def创建时创建，且和f绑定的函数同时存在’‘’‘
        lst.append(n)
        print(lst)
    f(3,L)    # [1,2,3]
    f(4,L)    #[1,2,3,4]
    f(100)    #[100]
    f(200)    #[100,200]
解决方法
    L=[1,2]
    def f(n,lst=None):
        if lst is None:
            lst==[]
        lst.append(n)
        print(lst)
    f(3,L)    # [1,2,3]
    f(4,L)    #[1,2,3,4]
    f(100)    #[100]
    f(200)    #[100,200]

模块 Module
    什么是模块：
      模块是一个包含有一系列数据，函数，类等组成的程序组
      模块是一个文件，模块文件名通常以.py结尾
    作用：
      让一些相关的数据，函数，类等有逻辑的组织在一起，使逻辑结果更加清晰
      模块中的数据，函数和类等可提供给其他模块或程序使用
    模块的分类:
    1. 内置模块(builtins) 在解析器的内部可以直接使用(通常用C语言编写)
    2. 标准库模块,安装python时已安装具可直接使用
    3. 第三方模块（通常为开源), 需要自己安装
       $pip3 install xxxx
    4. 用户自己编定的模块(可以作为其它人的第三方模块)
模块的导入语句：
  import语句：
    语法：
     import 模块名1 [as 模块新名1]，模块名2 [as 模块新名2]，...
    作用：
     将某模块整体导入到当前模块中
    用法：
      模块名.属性名
      如：
       import math
       print(math.factorial(5))
       print("圆周率为:",math.pi)
dir(obj) 函数，返回模块内所有属性的字符串列表
help(模块名) 可以查看模块相关的文档字符串
练习：
    1.输入一个圆的半径，打印出这个圆的面积
    # import math
    # r=float(input(''))
    # s=math.pi*r**2
    # print(s)

    2.输入一个圆的面积，打印出这个圆的半径
    # import math
    as m
    area=float(input(""))
    r=m.sqrt(area/m.pi)
    print(r)

from import 语句
  语法：
    from 模块名 import 模块属性名1 [as 属性新名1],模块属性名2 [as 属性新名2]
  作用：
    将某个模块的一个或多个属性导入到当前模块的用于域
  示例：
    from math import sin
    from math import pi,e,cos
    from math import factorial as factorial
    print(sin(pi/2)*fac(5))


  1.输入一个圆的半径，打印出这个圆的面积
  2 .输入一个圆的面积，打印出这个圆的半径
    from math import pi,sqrt
    r=float(input(''))
    s=pi*r**2
    print(s)
    s1=float(input())
    r1=sqrt(s1/pi)
    print(r1)

ftrom import *语句
  语法：
    from 模块名 import *
  作用：
    将某模块的所有属性导入到当前模块
  示例：
    form math import *
    print(sin(pi/2))
    print(factorial(5))
dir 函数
  dir([对象]) 返回一个字符串列表
  作用：
   1.如果没有参数，则返回当前作用域内所有变量的列表
   2.如果给定一个对象作为参数，则返回这个对象的所有变量的列表
     1）对于一个模块，返回这个模块的全部变量
     2) 对于一个类对象，返回类对象的所有变量,并递归基类对象的所有变量
     3) 对于其它对象，返回所有变量、类变量和基类变量

数学模块 math
  模块名：math
    import math
    from math import sin,cos,pi
    from math import *
  文档参见：
时间模块 
  模块名：time
  文档参见：
  练习：
    写一个程序，输入你的生日
     1) 算出你已经出生多少天?
     2) 算出你出生的那天是星期几
y=int(input('请输入出生时的年：'))
m=int(input('请输入出生时的月：'))
d=int(input('请输入出生时的日：'))
import time
t=(y,m,d,0,0,0,0,0,0)
t1=time.mktime(t)
t2=time.time()
tx=(t2-t1)//(60*60*24)
print('您已出生',tx,'天')

# 用出生时间的UTC秒数
t=time.localtime(t1)
d={0:"一",1:'二',2:'三',3:'四',4:'五',5:'六',6:"日"}
print('您出生的那时是星期：',d[t[6]])

系统模块 sys
  运行时系统相关的信息
  模块名： sys
    文档参见：
  示例：
  import sys
  print("hello")
  print("Current Version is",sys.version)
  print('sys.argv',sys.argv)
  sys.exit()
  print('程序正常结束')


练习：
  1.编写函数fun，其功能是计算下列多项式的和
  f(n)=1+1/1!+1/2!+1/3!+...+1/n!
  2.写一个程序，以电子时钟格式显示时间：
  格式：
  HH:MM:SS  如： 15:58:26
  3.编写一个闹钟程序，启动时设置定时时间，到时间后打印"时间到" 然后退出










