for 语句
  作用:
    用来遍历可迭代对象的数据元素
      可迭代对象是指能依次获取数据元素的对象
  可迭代对象包括:
    字符串str
    ----以下后再才讲----
    列表 list
    元组 tuple
    字典 dict
    集合 set
    ...
语法：
  for 变量列表 in 可迭代对象：
      语句块1（重复执行）
  else:
      语句块2
说明：
  else 子句可以省略（同while类似）
  当在循环内用break 终止循环时，else子句部分的语句不会执行
示例:
s='abcde'
for ch in s:
    print("ch----->",ch)
练习:
  任意输入一段字符串
    1)计算这个字符串的'a'这个字符的个数,并打印
    2)计算出空格的个数,并打印出来
    (要求用for语句,不允许使用S.count方法)
    思考:用while语句能否实现上述功能?
range 函数:
  作用:
    用来创建一个生产一系列整数的可迭代对象(也叫整数序列生成器)
  函数         说明
  range(stop)   用来生成0~stop之间内的整数,知道stop为止(不包含stop)
  range(start,stop[,step])  用来生成start~stop之间的整数,直到stop
  为止(不包含stop),每个整数间隔step,且step可以是负数
  说明:
    此对象可用于for语句来进行迭代取出其中的元素
  示例:
    range(4)         # 生成 0, 1, 2, 3
    range(3, 6)      # 生成 3, 4, 5
    range(1, 10, 2)  # 生成 1 3 5 7 9
    range(5, 0, -2)  # 生成 5, 3, 1
    range(4, 0)      # 生成空
  range示例:
  for x in range(4):
      print(x)   #  0 1 2 3
练习:
  用for语句打印1~20的整数,打印在一行内
  用for语句打印1~20的整数,每行打印5个,打印4行
3.求100以内有哪些数与自身+1的乘积再对11求余,结果等于8?
x*(X+1)%11==8
4.输入一段字符串,判断您输入的字符串中有几个文字符:
注:中文字符的编码值一定大于127.
for语句的注意事项:
 1. for 语句range调用顺序:
  示意:请问此程序打印的结果是什么?为什么?
    i = 6
    for x in range(1, i):
        # 此print函数会执行5次
        print('x =', x, 'i=', i)
        i -= 1  # <<<---注意此处
   结果:
    x = 1 i= 6
    x = 2 i= 5
    x = 3 i= 4
    x = 4 i= 3
    x = 5 i= 2 
  2. for语句变量列表里的变量可能不被创建
    for x in range(4,0):
        print(x)
    else:
        print('循环结束后x的值是:',x)   #报错
  3.for语句中用break语句中断执行时,else子句不会执行:
    示例:
      for x in range(10):
        print(x)
        if x==3:
            break
      else:
          print('语句结束')
for 语句的嵌套:
  示例:
    for x in "abc":
        for y in "123":
            print(x+y)
  练习:
    写一个程序,打印26个大写英文字母和26个小写英文字母
    A B C D...X Y Z a b c ...x y z
continue语句
  问题:
    如何让程序不在向下执行本次循环,重新开始一次新的循环
  作用:
    用于循环语句中(while,for)中,不在执行本次循环continue之后的语句
    重新开始一次新的循环
  说明;
  1. 在for 语句中执行continue语句，将会从可迭代对象中取下一个数据，
  绑定变量后开始一次新的循环
  2. 在while语句中执行continue,将会直接跳转到 while语句的真值表达式
    处重新判断循环条件
  语法:
    continue
练习:
  1.输入一个整数代表开始用begin绑定,输入一个整数用end绑定
    打印begin-end(不包含end)之间的全部奇数
  2.求1-100之间所有不能被2,3,5,7整除的数
    1)打印这些数
    2)打印这些数的和

循环小结:
  while 语句
  for 语句
    字符串 str 
    range() 函数返回对象
  break 语句
  continue 语句

列表list:
  问题:
列表的定义:
  列表是一种容器
  列表是可以被改变的序列
  列表是由一系列特点元素组成的,元素与元素之间可能没有任何的关联关系,但
  他们之间有先后顺序关系
python3中序列的类型
  字符串str
  列表 list
  ----一下后面会讲----
  元祖 tuple
  字节串 bytes
  字符数组 bytearray
创建空列表的字面值:
    []  #  创建空列表的表达式
创建非空列表的字面值:
    L=[1,2,3,4,5]
    L=['北京','上海','深圳']
    L=[1,'two',3.14,'四']
    L = [1, 2, [3.1, 3.2, 3.3], 4]

列表的构造(创建) 函数list
list()  #生产一个空列表 等同于[]
list(iterable) 用可迭代对象创建一个列表
示例:
    L=list()   #L 绑定空列表
    l=list("hello")   #l绑定['h','e','l','l','o']
    l=list(range(7,10))   #l= [7,8,9]
列表的运算:
  算术运算:
  +  +=    *   *=
  +用于拼接列表
    lx=[1,2,3]
    ly=[4,5,6]
    lz=lx+ly   #lz=[1,2,3,4,5,6]
  += 用原列表与右侧列表拼接,在用原变量绑定列表
    语法:
     L+= 可迭代对象
     示例:
     l=[1,2,3]
     l+=[4,5,6]  #l=[1,2,3,4,5,6]
     l+="ABC"    #l=[1,2,3,4,5,6,'A','B','C']
  *用于生产重复 的列表
    x=[1,2]*3   #x=[1,2,1,2,1,2]
  *= 用原列表生产重复列表,并用变量绑定生成的列表
    x=[1,2]
    x*=3  #x=[1,2,1,2,1,2]
列表的比较运算
  运算符:
    <  <=  >  >=  ==  !=
  说明:
    列表的比较规则与字符串的比较规则相同
    列表要求每两个元素能依次进行比较,否则会出现类型错误
  示例:
  x=[1,2,3]
  y=[1,3,2]
  x<y   #True
  x!=y   #True
  [1,'Two']>['Two',1]   #  错误
  [1,'Two',3.14]<[1,'二',5.6]    #True
  列表是可迭代对象
  l=[1,3,5,7]
  for x in l:
      print(x)  #1  3  5  7
练习:
    1.写一个程序,让用户输入很多正整数,当输入负数时结束输入
    将用户输入的数存在于列表L中,打印这个列表如:
    请输入:1
    请输入:2
    请输入:3
    请输入:4
    打印:
    [1,2,3,4]
列表的 in / not in 运算符
  作用:
    判断一个值是否存在于列表中。如果存在返回True, 否则返回False
    not in 的返回值与 in 运算符相反
  说明:
    同字符串类型的in/not in类似,但是只能判断单个元素是否存在于列表中
  示例:
    x=[1,'Two',3,"Four"]  
     3 in x  # True
    '3' in x  # False
    'Fuor' in x  # True

列表的索引操作
  语法;
    列表[整数表达式]
  用法:
    等同于字符串的索引
    索引分为正向索引和反向索引,规则写字符串规则完全相同
  示例:
    x=[1,"二",3,"Four"]
    print(x[0])   #1
    print(x[1])   #二
    print(x[-1])  #Four  
列表的索引赋值操作:
  列表是可变的序列,可以通过索引赋值改变列表中的元素
  语法:
    列表[整数表达式] =表达式
  示例:
  x=[1,"二",3,"Four"]
  x[1] =2  #  将列表的第二个元素改为2
  x[-1]=4
  print(x)  #[1,2,3,4,]
列表的切片:
  语法:
  列表[(开始索引):(结束索引)(:(步长))]
  说明:
    列表切片取值返回一个列表,规则等同于字符串规则
  示例:
    x=[0,1,2,3,4,5,6,7,8]
    y=x[1:9:2]   # 奇数
切片的赋值操作:
  作用:
    可以改变原列表的排序,可以插入和修改数据
    可以用切片改变列表对应的元素的值
  语法:
    列表[切片]=可迭代对象
    注:赋值运算符的右侧必须是一个可迭代对象
  示例:
    L=[2.2,3.3,4.4]
    L[0:1]=[1,2]  # L=[1,2,3.3,4.4]
    L=[1,2,3.3,4.4]
    L[2:]=[3,4,5,]  #L=[1,2,3,4,5]
    L=[3,4]
    L[0:0]=[1,2]   #L=[1,2,3,4]
    L=[3,5,10]
    L[1:2]=range(4,10)  #L=[3,4,5,6,7,8,9,10]

切片的注意事项:
  对应步长不等于1的切片赋值,赋值运算符的右侧的可迭代对象提供的元素个数一
  定要等于切片切出的段数
  如:
  l=[1,2,3,4,5,6]
  l[::2]="ABC"    #对的
  l[::2]="ABCD"   #错的
练习:
  1.写程序输入一个三角形的宽和高,打印相应的三角形.如
  输入:3
  1)*
    **
    ***
  2)  *
     **
    ***
  3)***
    **
    *
  4)***
     **
      *
  2.写一个程序,任意输入一个整数,判断这个数是否为素数(prime)
  素数(也叫质数),只能被1和自身整除的正整数
  如:2 3 5 7 11 13 17....
  提示:
  用排除法:当判断x是否为素数是,只要让x分别除以2,3,4,5....x-1,只要
  有任何一个数能被整除,则说明x不是素数,否则为素数

  3.编写程序求下列多项式的值:
  Sn=1/1-1/3+1/5-1/7+.....
    1)求1000000个这样的分数相加的和是多少?
    2)将上一步的和乘以4打印出来,是多少?

  4.算出100~999之间的水仙花数(Narcissistic Number)
     水仙花数是指百位的3次方+十位的3次方+个 位的3次方等于原整数
     如:153=1**3+5**3+3**3
     