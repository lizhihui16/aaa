文件 File
    什么是文件
      文件是用于数据存储的单位
      文件通常用于长期存储数据
      文件中的数据是以字节为单位进行顺序存储的
文件的操作流程：
  1.打开文件
  2.读/写文件
  3.关闭文件
文件的打开函数：
  open(file,mode='rt')用于打开一个文件，返回此文件流对象，如果打开失败，则会触发
  OSError错误
     file  是文件路径名的字符串
     mode  是打开的模式
     详见：
文件的关闭方法:
  F.close()   #关闭已经打开的文件，释放系统资源
示例：
  file_open.py
文本文件的基本操作：
  读文件：
    F.readline()   #读取一行文字
    F.readlines()   #读取多行文字
    F.read()       #读取n行文字
  写文件：
    F.write(字符串)  #写字符串到一个已经打开的文件
    F.writelines(字符串列表)  # 写多个字符串到已经打开文件中
练习：
    将如下数字用编辑器写入到文件data.txt中，数据如下：
    小李 13888888888
    小赵 13999999999
    张三丰 010-8888888
    写程序读取文件中的数据，打印出姓名和电话号码，
    格式如下：
    姓名：小李 电话：13888888888
    姓名：小赵 电话13999999999
    姓名：张三丰 电话：010-88888888
文本文件读写时个操作系统的换行符问题
　Linux换行符：　'\n'
　Window换行符：　'\r\n'
　旧的Macintosh的换行符：　'\r'
　新的Mac OS X的换行符：　　'\n'
文本文件操作说明：
  文本模式下，各操作系统的换行符在python内部时会自动转换为字符'\n'

写文本文件的示例：
flie_write.py
  打开模式：
    'w'
    'x'
    'a'
    详见文档
练习：
　１.写一个程序，输入很多人的姓名，年龄，家庭住址，保存在文件‘infos.txt'中
  　（格式自定义，建议用空格或逗号分隔
  　如：info.txt
        小李　２０　北京市朝阳区
        小张　１８　上海市浦东新区
  ２.写一个程序，读入infos.txt中的内容，以如下格式打印：
      姓名：　小张，年龄：２０，住址：北京市朝阳区

文件的迭代读取:
   文件流对象是可迭代对象，迭代过程将以换行符'\n'作用分隔符依次获取
   如：
    f = open('myfile.txt')
    for line in f:
        print(line)

二进制文件操作
  操作模式字符'b'
    默认的文件中存储的都是以字节为单位的数据，通常有人为规则的格式,
    对二进制文件的读写需要用字节串（bytes)进行操作
  F.read() 的返回类型:
    1. 对于文本模式,F.read()返回类型为字符串str
    2. 对于二进制模式,F.read()返回字节串bytes
  示例：
  binary_flie_read.py
  binary_flie_write.py
F.tell()  返回当前文件流的绝对位置
F.seek(偏移量，whence=相对位置)
    偏移量:
        大于0的数代表向偏移（文件尾方向）
        小于0代表向文件头方向移动
    相对位置:
      0 代表从文件头开始偏移
      1 代表从当前位置开始偏移
      2 代表从文件尾开始偏移
  作用:
    改变当前文件的读写位置
  示例见：
  　seek.py
f.flush　清空缓冲区
标准输入输出文件：
  sys.stdin 标准输入文件（默认为键盘）
  sys.stdout 标准输出文件（默认为屏幕终端）
  sys.stderr 标准错误输入文件（默认为屏幕终端）
标准文件不需要打开和关闭，可以直接使用
  模块名： sys
  示例见：
    stdin.py
汉字编码问题:
  问题:
    十个汉字占多少个字节

汉字编码:
  国标系列:
    GB18030(二字节或四字节编码,共27533个汉字)
      GBK(二字节编码,共21003个汉字)
        GB2312(二字节编码,共个6763汉字)
    (Windows 常用)
  国际标准:
      Unicode  <---> UTF-8
    (Linux, Mac OS X, IOS, Android等常用)

说明:
  python3的字符串内部都是用Unicode来存储字符的
  
python 编码(encode) 字符串:
   'gb2312'
   'gbk'
   'gb18030'
   'utf-8'
   'ascii'

编码注释:
  在python 源文件第一行或第二行写入如下内容是告诉解释执行器此文件的编码类型是什么
  如:
    # -*- coding: gbk -*-
    # 设置源文件编码格式为gbk
  或
    # -*- coding: utf-8 -*-
    # 设置源文件编码格式为utf-8
  作用：
  　告诉python解释执行器，当前文件的编码是什么

# 练习：
#     写程序实现复制文件功能：
#     要求：
#         １．源文件路径和目标文件路径需要手动输入
#         ２．要考虑关闭文件问题
#         ３．要考虑复制超大文件问题
#         ４．要能复制二进制文件
  2. 为学生信息管理项目添加两个功能
     | 9)  保存学生信息到文件(si.txt)    |
     | 10) 从文件中读取学生数据(si.txt)  |

    (要求，每个功能只要有一个函数与之相对应)




















