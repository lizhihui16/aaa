第一阶段面试题
一、Python 基础
1. continue 和 break 有什么区别？
    1.continue是跳过本次循环剩下的语句，重新开始下一次循环
    2.break是终止循环，跳出循环语句（只能跳出一层循环语句）
        break之后的语句不会执行
        区别：continue终止本次循环，break完全终止循环


2. Python 中的作用域？
    是python执行过程中，遇到一个变量名时查找变量名的所在位置的顺序
    LEGB
        本地作用域(Local)
        外部嵌套函数作用域(Enclosing locals)
        全局／模块作用域(Global)
        内置作用域(Built-in)
    python中一个变量的作用域是由赋值语句执行的位置来决定的


3. 谈谈对闭包的理解？
    闭包(closure)是一个重要语法结构，他能提高代码的重用性
    闭包必须名字三个条件：
        略
    当一个内嵌函数引用其外部嵌套函数的变量就形成一个闭包
    闭包的缺点是占用的内存较大


4. Python 里的拷贝？理解引用和 copy(),deepcopy()的区别。
    L1=[1,2,3,4,[5,6[7,8]]]
    直接赋值是引用：
        L2=L1  #引用
        L3=L1.copy(浅拷贝)
        import copy
        L4=copy.deepcopy(L1)   #深拷贝



5. Python 垃圾回收机制？
    1.主要使用引用计数(reference counting)来跟踪和回收垃圾
        L=[1,2,3]  #此时引用计数为１
        L2=L       ＃［１，２，３]的引用计数为２
        L3=[1,2,L]  #[1,2,3]引用计数为３
        del L,L2,L3  #[1,2,3]的引用计数为０
    2.在引用计数的基础上，通过标记－清楚(mark and sweep)解决容器对象可能产生的循环引用问题
        L1=[1,2]
        L2=[3,4]
        L1.appned(L2)
        L2.append(L1)
        del L1,L2
    3.分代回收(generaion collection)以空间换时间的方法提高垃圾回收的速度



6. 什么是 lambda 函数？它有什么好处?
    首要用途是定义简单，短小的回调函数
    好处：
        不用定义变量名
        用完后及被释放


7. 请写出一段 Python 代码实现删除一个list 里面的重复元素？
    L[1,2,3,1,2,3,4,6,5,3]
    L2=list(set(L))


8. Python 里面如何拷贝一个对象？（赋值，浅拷贝，深拷贝的区别）


9. 介绍一下 try-except 的用法和作用？
    捕获异常，把程序从异常流程转为正常流程并继续执行
    描述：
        except 子句
        else 子句
        finally 子句　


10. Python 里面如何生成随机数？
    random 模块
        模块里有 
        　　random函数用于生成0-1的实数
            randint(a,b)　生成a-b的整数
            uniform(a,b)　生成a-b的浮点数
            randrange([start,] stop[, step])

11. 如何在一个 function 里面设置一个全局的变量？
    解决办法是在function里的赋值语句之前加一条global声明语句
        def f():
            global x
            x=100


12. 单引号，双引号，三引号的区别?
    单引号内可以放双引号
    双引号内可以放单引号
    三引号内可以放单引和双引，双引号的折行会自动转换为换行符\n


13. 下面代码会输出什么：
def f(x,l=[]):
    for i in range(x):
        l.append(i*i)
    print(l)
f(2)
f(3,[3,2,1])
f(3)

[0,1]
[3,2,1,0,1,4]
[0,1,0,1,4]
    python中函数的缺省参数会跟随函数一直存在，当参数不够时，
    会用缺省参数绑定的对象传参



14. 这两个参数是什么意思：*args，**kwargs？我们为什么要使用它们？
    当需要写一个函数，但并不确定用户在调用时需要多少个实参时可以使用上述的定义方式
    不管调用者传入多少个位置参数都会放于args绑定的元组中
    不管调用者传入多少个关键字参数都会放在kwargs绑定的字典中
    args和kwargs是约定的名字，可以换为a,b等


15. 简要描述 Python 的垃圾回收机制（garbage collection）。


16. 简述函数式编程
    在函数式编程中，函数是基本单位，除了匿名函数，python中还常使用filter,map,reduce,apply
    等函数来支持函数式编程
        (import functools)


17. 什么是匿名函数，匿名函数有什么局限性？
18. 如何捕获异常，常用的异常机制有哪些？
19. 去除列表中的重复元素？
20. Python 中list 和tuples 的差别是什么？
21. 代码举例什么是decorator。
22. 单引号，双引号，三引号的区别
23. 请用自己的算法,按升序合并如下两个List , 并去除重复的元素
List1 = [2,3,8,4,9,5,6]
List2 = [5,6,10,17,11,2]
24. 有一个多层嵌套的列表 A = [1,2,[3,4,[‘434’,[…]]]],请写一段代码遍历
A 中的美个元素并打印出来.
25. 用自己的话说明迭代器和生成器，它们之间的关系？
26. Python 是如何进行内存管理的?