类变量
类方法
静态方法
单继承
封装
多态

类变量
  类变量是类的属性，此属性属于类，不属于类的实例
作用:
  通常用来存储该类创建的对象的共有属性
说明:
  类变量可以通过类直接访问
  类变量可以通过类的实例直接访问(取值)
  类变量可以通过此类的对象的 __class__属性间接访问
示例见：
    class_varizble.py
    class_varizble２.py

类的文档字符串:
  类内第一个没有赋值给变量的字符串为类的文档字符串
  类的文档字符串可以用类的__doc__属性访问

类的 __slots__ 属性 
  作用:
    1.限定一个类创建的实例只能有固定的属性(实例变量)
    2.不允许对象添加列表以外的实例属性
    3.访止用户因错写属性的名称而发生程序错误
  说明:
  　__slots__属性是一个列表，列表的值是字符串
    含有__slots__属性的类所创建的对象没有__dict__属性,即此实例不用字典来存储对象的属性
  示例见:
    slots.py
类方法:
  类方法是用于描述类的行为的方法，此方法属于类，不属于该类创建的实例对象　

  说明:
    1. 类方法需要使用@classmethod 装饰器定义
    2. 类方法至少有一个形参，第一个形参用于绑定类，约定写为'cls'
    3. 类和该类的实例都可以调用类方法
    4. 类方法不能访问此类创建的对象的实例属性
  示例见:
  class_method.py

静态方法 @staticmethod
  静态方法是定义在类内的函数，此函数的作用域是类的内部

说明:
  静态方法需要使用staticmethod装饰器定义
  静态方法与普通函数定义相同，不需要传入self实例参数和cls类参数
  静态方法只能凭借该类或类的实例调用
  静态方法不能访问类变量和实例变量(属性)

示例见:
  static_method.py
练习：　　　　　　　　static_method.py
  用类来描述一个学生的信息(可以修改之前写的Student类)

  class Student:
      ....此处自己实现

  学生信息有:
     姓名，年龄，成绩
  将这些学生对象存于列表中,可以任意添加和删除学生信息
     1) 打印学生的个数
     2) 打印出所有学生的平均成绩
     3) 打印出所有学生的平均年龄
    (建议用类变量存储学生的个数)

继承(inheritance)  和  派生 (derived)

什么是继承/派生
  继承是从已有的类中派生出新的类，新类具有原类的属性和行为，并能扩展新的能力
  派生类就是从一个已有的类衍生出新的类，在新的类上可以添加新的属性和行为

  作用:
    1. 用继承派生机制，可以将一些共有功能加在基类中，实现代码共享.
    2. 在不改变基类代码的基础上改变原有类的功能
  名词
    基类(base class)/超类(super class)/父类(father class)
    派生类(derived class) / 子类(child class)
单继承:
  语法:
    class 类名(基类名):
        语句块 
  说明:
    单继承是指派生类由一个基类衍生出来
  示例见:
    inherit.py
继承说明:
  Python3任何类都直接可间接的继承自object类
  object类是一切类的超类

类的 __base__ 属性
  __base__属性用来记录此类的基类
  
python3中的内建内继承关系见:
  >>> help(__builtins__)

覆盖 override
  什么是覆盖
    覆盖是指在有继承关系的类中，子类中实现了与基类同名的方法，在子类实例调用该方法时，
    实际调用的是子类中的覆盖版本，这种现象叫覆盖
  示例见:
    override.py
子类对象显示调用基类方法的方式：
  基类名。方法名（实例，实际调用传参）
super 函数:
  super(cls, obj)   返回绑定超类的实例(要求obj必须为cls类型的实例)
  super()   返回绑定超类的实例，等同于 super(__class__, 实例方法的第一个参数), 必须用在方法内调用
作用：
  借助super() 返回绑定超类的实例，用超类的实例来调用其父类的覆盖方法
示例见:
  super.py

显式调用基类的初始化方法
  当子类中实现了__init__方法，基类的初始化方法并不会被调用，此时需要显式调用基类的构造方法
  示例见:
    super_init.py

练习：
  修改用来学生的信息公里系统，将原来用字典存储学生信息改变用学生Student类型的对象来存储信息
    要求：
      １.类Student存于文件student.py
       2.尽量少在类外部使用实例变量（建议增加实例方法来获取实例变量的信息）
















