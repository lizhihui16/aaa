字符串　str
    作用：
        用来记录文本信息
    字符串的表示方法：
        在非注释中，凡是用引号括起来的部分都是字符串
        '        单引号
        "　　　　　双引号
        ’‘’　　　　三单引号
        “”“　　　　三双引号
        注：空字符串的布尔值为False
    非空字符串的字面值表示方式：
        'hello'
        "hello"
        '''hello'''
        """hello"""
    单引号和双引号的区别：
        单引号内的双引号不算结束符
        双引号内的单引号不算结束符
    示例：
        print("I'm teacher")
        print('my name is "weimingze"')
三引号字符串：
    用‘’‘或”“”括起来的内容为三引号字符串
    作用：
        三引号中的字符串换行会自动转换为换行符'\n'
        三引号可以包括单引号和双引号
    示例：
        print('welcome to beijing.\nlike python!\n I am Studing...')
        #用三引号写为：
        print('''welcome to beijing.
        like python
         I am Studing...''')
隐式字符串字面值拼接：
    示例：
        s="I'm ' '"wemingze"' '这是三双引"""' "这是三单引'''"
        print(s)
用转义序列代表特殊字符
    字符串中字面值中用字符　反斜杠　\　后跟一些字符代表一个字符
    转义格式　　　含义
    \'      代表一个单引号
    \"      代表一个双引号
    \n      代表一个换行符
    \\      一个反斜杠
    \r      返回当标至行首字符
    \t      水平制表符
    \v      垂直制表符
    \b      倒退字符
    \f      换页
    \0      空字符（字符值为零）
    \0oo    oo为两位八进制表示的字符
    \xXX    ＸＸ为两位十六进制表示的字符
    \uXXXX  XXXX为四位十六进制表示的Unicode16字符
    \UXXXXXXXX  Unicode32的十六进制表示的字符
ascii编码
    $ man ascii #查看所有英文字符的编码
常用的ASCII编码：
    字符    十进制  十六进制
    '0'     48      0x30
    'A'     65      0x41
    'a'     97      0x61
求字符串长度的函数
    len(s) 返回字符串的字符的个数
练习：
    求以下字符串有几个字符
    ’1234abcd'   8
    '5\'4"'     4
    '\"A\x34\056'    4
    '\r\n\t\z'    5
raw　字符串（原始字符串）
    格式：
    r'字符串内容'
    r"字符串内容"
    r'''字符串内容'''
    r"""字符串内容"""
    作用：
        让转义字符\无效
    示例：
    s1='C:\newfile\test.py'
    print(s1)
    s2=r'C:\newfile\test.py'
    print(s2)
字符串的运算：
    运算符：
        ＋　＋＝　*  *=
+加号用于拼接字符串
＋＝用于原字符串与右侧字符串拼接后替换原变量
    示例：
    s="abcd"+"123"   #s=‘abcd123'
    s+="ABCD"  #s='abcd123ABCD'
* 运算符生成重复的字符串
    x="ABCD"*3  #x='ABCDABCDABCD'
    注：字符串只能和整数相乘

    x="123"
    x*=2      # x='123123'
练习：
    写一个程序，打印一个高度为４行的矩形方框
    如：
    请输入宽度：１０
    打印：
    ＃＃＃＃＃＃＃＃＃＃
    ＃　　　　　　　　＃　
    ＃　　　　　　　　＃　
    ＃＃＃＃＃＃＃＃＃＃


字符串的比较运算
    运算符：
    < <= > >= == !=
    规则：
        依次按编码值进行比较，一旦不同，比较将结束
        当编码值与长度完全相同时两个字符串相等
    示例：
        'A'<'B'       #True
        'ABC'>'ABB'   #True
        'ABC'<'ACB'   #True
        ;ABC'>'abc'   #False
        'AB'<'ABC'    #True
        'ABC'!='CBA'  #True
        'AD'>'ABCD'    #True
ｉｎ／not in 运算符
    作用：
        ｉｎ用于序列，字典，集合中，用于判断某个值是否存在于容器中，如果存在返回
        Ｔｒｕｅ，否则返回Ｆａｌｓｅ
        not in 写ｉｎ的返回结果相反
    格式：
    对象　ｉｎ　序列
    示例：
    x='welcome to tarena'
    'to' in x   # True
    'beijing' in x  #False
    '123' not in x #True
索引运算　index
    python 字符串是不可以改变的字符序列
    语法：
        字符串【整数表达式】
    说明：
        python 序列都可以用索引来访问列中的对象
        python 序列正向索引从0开始，第二个索引为1，。。。，最后一个为len(s)-1
        python序列的反向索引是从-1开始，-1代表最后一个，-2代表倒数第二
        个，。。。，第一个是-len(s)
    示例：
        s='ABCDE'
        print(s[1])  #B
        print(s[4])  #E
        print(s[-1])  #E
        print(s[-5])  #A
        print(s[1])  #B
练习：
    输入一个字符串，打印如下内容：
    1）打印这个字符串的第一个字符
    2）打印这个字符串最后一个字符
    3）如果这个字符串的长度为奇数，打印中间这个字符
    注：求字符串长度的函数是Len（s）
字符串切片操作 slice
    从字符串序列中取出相应的元素，重新组成一个新的字符串序列
    语法：
    字符串【（开始索引b）：（结束索引e）(：（步长s)）】
    注：小括号（）括起来的部分代表可省略
    说明：
    1.开始索引是切片开始切下的位置，0代表带一个元素...，-1代表最后一个元素（与索引规则相同）
    2.结束索引是切片的终止索引（但不包括终止点）
    3.步长是切片每次获取当前元素后移动的方向和偏移量
        1）没有步长，相当于默认步长为1
        2）当步长为正数时，取正向切片，开始索引默认为0，结束索引默认为最后一个元素
        的下一个位置
        3）当步长为负数时，取反向切片:默认的起始位置为最后一个元素，默认终
        止位置为第一个元素的前一个位置
    示例：
    s="ABCDE"
    a=s[1:4]   #s='BCD'
    a=s[1:]    #s='BCDE'
    a=s[:4]    #s='ABCD'
    a=s[:]    #s='ABCDE'
    a=s[4:4]    #s=''
    a=s[:5:2]    #s='ACE'
    a=s[::-1]    #s='EDCBA'
    a=s[::-2]    #s='ECA'
    a=s[3:0:-1]    #s='DCB'
    练习：
    1.写一个程序，输入一个字符串，把字符串的第一个字符和最后一个字符去掉后，
    打印出处理后的字符串
    2.写一个程序，输入任意一个字符串，判断这个字符串是否是回文
    （回文是指中心对称的文字）
    如：上海自来水来自海上
    ABCCBA 
    12321

python 运算符的优先级：
    见文档
python3中常用的序列函数
    len(x)   返回序列的长度
    max(x)   返回序列的最大值元素
    min(x)   返回序列的最小值元素
    示例:
    s="hello"
    print(len(s))     #5
    print(max(s))     #o
    print(min(s))     #e
字符编码转换函数
    ord(c)  返回一个字符c的Unicode编码值
    chr(i)  返回i这个值所对应的字符
    示例：
    c=ord('A')
    print(c)   #65
    ch=chr(c)   #ch='A'
    print(ch)   #A 
练习：
    1.写一个程序，输入一个字符串，如果字符串不为空，则把第一个字符的编码值打印出来
    2.写一个程序。输入一个整数（0-65535），打印出这个值所对应的字符
    见sp_cha.py 
整数转字符串函数：
    bin(i)  将整数转为二进制字符串
    oct(i)  将整数转为八进制字符串
    hex(i)  将整数转为十六进制字符串
    示例：
        a=13
        print(bin(a))    # 0b1101
        print(oct(a))    #0o15
        print(hex(a))    #0xd
字符串构造函数
    str(obj='')  将对象转换为字符串
    示例：
    "123"+1  #报错
    "123"+str(1) #1231
python3 中常用的字符串方法（method)
方法的调用语法：
    对象.方法名（方法传参）
    示例：
    'abc'.isalpha()  #对的
    123.isalpha()    #错的
文档参见：
    python_base_docs_html/str.html
练习：
    1.输入一个字符串，把输入的字符串的空格全部去掉（包括字符串中间的空格）
    1）打印原字符串及长度
    2）打印处理后的字符串及长度
    2.写程序，输入三行文字，让这三行文字在一个方框内居中显示
    请输入：    hello!
    请输入：   I'm studing python!
    请输入：    I like python
    打印如下:
     +---------------------+
     |       hello!        |
     | I'm studing python! |
     |    I like python    |
     +---------------------+
     注：不要输入中文
